<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.suitecare.suitecare.api.reservation.mapper.ReservationMapper">

    <!-- 예약 등록 프론트url=(/family/reservation) -->
    <insert id="createReservation" parameterType="ReservationRequestDTO" useGeneratedKeys="true" keyProperty="id">
        insert into Reservation (patient_id, location, postcode, road_address, jibun_address, address_detail, status, start_date, end_date, start_time, end_time, wage, create_at, update_at)
        values (#{patient_id}, #{location}, #{postcode}, #{road_address}, #{jibun_address}, #{address_detail}, "P", #{start_date}, #{end_date}, #{start_time}, #{end_time}, #{wage}, sysdate(), sysdate())
    </insert>

    <!-- 예약 등록(요일) 프론트url=(/family/reservation) -->
    <insert id="createDayOfReservation" parameterType="com.suitecare.suitecare.api.reservation.domain.DayOfReservation">
        insert into DayOfReservation (reservation_id, day)
        values (#{reservation_id}, #{day})
    </insert>

    <select id="getSearchedReservation" parameterType="SearchedReservationRequestDTO" resultType="SearchedReservationResponseDTO">
        SELECT r.id, patient_id, s.tel, p.gender, p.birthday, p.diagnosis_name, r.location,
            substring_index(r.road_address, " ", 2) as road_address,
            r.wage, r.start_date, r.end_date, r.start_time, r.end_time, GROUP_CONCAT(day) as day
        FROM reservation AS r
        JOIN dayofreservation AS d ON d.reservation_id = r.id
        JOIN patient AS p ON p.id = r.patient_id
        JOIN suitemember AS s ON p.member_id = s.id

        WHERE status = 'P' AND start_date > current_date()

        AND wage between
        <foreach collection="wage" item="it" separator="and">
            #{it}
        </foreach>
        <if test="search_input neq ''">
            AND diagnosis_name like '%${search_input}%'
        </if>
        <if test="location != null">
            AND SUBSTRING(r.road_address, 4, 3) in
            <foreach collection="location" item="it" open="(" close=")" separator=",">
                #{it}
            </foreach>
        </if>
        <if test="gender != null and gender.length == 1">
            AND p.gender =
            <foreach collection="gender" item="it">
                #{it}
            </foreach>
        </if>
        GROUP BY r.id, s.tel;
    </select>
    
    <insert id="applyReservation" parameterType="ApplyReservationRequestDTO">
        insert into applicantofreservation (reservation_id, mate_id)
        values(#{reservation_id}, #{id});
    </insert>

    <select id="isPresentApplicant" parameterType="ApplyReservationRequestDTO">
        SELECT count(reservation_id) FROM applicantofreservation WHERE reservation_id = #{reservation_id} AND mate_id = #{id}
    </select>

    <select id="getReservationListById" resultType="PendingReservationResponseDTO">
        SELECT r.id reservation_id, patient_id, start_date, end_date
        FROM reservation r, patient p
        WHERE member_id = #{id} AND r.patient_id = p.id AND now() <![CDATA[<]]> start_date AND status = 'p';
    </select>

    <select id="getReservationInfoById" resultType="ReservationDetailResponseDTO">
        SELECT location, road_address, address_detail, wage, start_time, end_time, group_concat(day) weekday
        FROM reservation r, dayofreservation d
        WHERE r.id = #{reservation_id} AND d.reservation_id = r.id
        GROUP BY d.reservation_id;
    </select>

    <select id="getApplicantList" resultType="ApplicantInfoResponseDTO">
        select s.name, birthday, profile_picture_filename, introduction, contact_time_start, contact_time_end, desired_wage, group_concat(distinct m.name) mainservice, group_concat(distinct l.name) location
        from suitemember s, materesume r, mainservice m, location l
        where r.member_id in (select mate_id from applicantofreservation where reservation_id = #{reservation_id})
        and s.id = r.member_id and r.member_id = m.member_id and r.member_id = l.member_id
        group by id, s.name, birthday, profile_picture_filename, introduction, contact_time_start, contact_time_end, desired_wage;
    </select>

    <!-- family ID로 예약 내역 검색 -->
    <select id="getReservationList">
        select id, patient_id, mate_id, status, start_date, end_date, create_at, payment_at from reservation
        where patient_id in (select id from patient where member_id = #{member_id})
    </select>

</mapper>