<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.suitecare.suitecare.api.mate_resume.mapper.MateResumeMapper">

    <!--<insert id="createMateResume" useGeneratedKeys="true" keyProperty="mateResumeDTO.id">-->
    <insert id="createMateResume">
        INSERT INTO mateResume(id, profile_picture_filename, contact_time_start, contact_time_end, introduction, desired_wage)
        VALUES (#{login_id}, #{profile_picture_filename}, #{mateResumeDTO.contact_time_start}, #{mateResumeDTO.contact_time_end}, #{mateResumeDTO.introduction}, #{mateResumeDTO.desired_wage});
    </insert>
    
    <select id="findResumeById" resultType="MateResumeDTO">
        SELECT  materesume.id,
                profile_picture_filename,
                introduction,
                contact_time_start,
                contact_time_end,
                desired_wage,
                tel,
                email
        FROM materesume, suitemember
        WHERE materesume.id = #{login_id} AND materesume.id = suitemember.id;
    </select>

    <update id="updateMateResume">
        UPDATE MateResume
        <set>
            <if test="mateResumeDTO.profile_picture_filename != null">
                profile_picture_filename = #{mateResumeDTO.profile_picture_filename},
            </if>

            <if test="mateResumeDTO.introduction != null">
                introduction = #{mateResumeDTO.introduction},
            </if>

            <if test="mateResumeDTO.contact_time_start != null">
                contact_time_start = #{mateResumeDTO.contact_time_start},
            </if>

            <if test="mateResumeDTO.contact_time_end != null">
                contact_time_end = #{mateResumeDTO.contact_time_end},
            </if>

            <if test="mateResumeDTO.desired_wage != null">
                desired_wage = #{mateResumeDTO.desired_wage}
            </if>
        </set>
        WHERE id = #{login_id}
    </update>

    <select id="getSearchedMate" resultType="SearchedMateResponseDTO">
        WITH resume	AS (
            SELECT r.id, profile_picture_filename, introduction, contact_time_start, contact_time_end, desired_wage,
            GROUP_CONCAT(distinct loc.name) as location,
            GROUP_CONCAT(distinct service.name) as mainservice
            FROM materesume r
            JOIN location loc ON r.id = loc.mate_resume_id
            JOIN mainservice service ON r.id = service.mate_resume_id
            WHERE r.id <![CDATA[<>]]> #{login_id}
            GROUP BY r.id, profile_picture_filename, introduction, contact_time_start, contact_time_end, desired_wage
        )

        SELECT r.*, name, gender, birthday, tel, email
        FROM resume r
        JOIN suitemember sm ON r.id = sm.id

        WHERE 1=1
        <if test="searchedDTO.wage != null">
            AND desired_wage BETWEEN
            <foreach collection="searchedDTO.wage" item="it" separator="and">
                #{it}
            </foreach>
        </if>

        <if test="searchedDTO.search_name != null">
            AND name LIKE CONCAT('%', #{searchedDTO.search_name}, '%')
        </if>

        <if test="searchedDTO.gender != null and searchedDTO.gender.length == 1">
            AND gender =
            <foreach collection="searchedDTO.gender" item="it">
                #{it}
            </foreach>
        </if>

        <if test = "searchedDTO.age != null">
            AND TRUNCATE((to_days(NOW()) - to_days(birthday)) / 365, -1) IN
                <foreach collection="searchedDTO.age" item="it" separator="," open="(" close=")">
                    #{it}
                </foreach>
        </if>

        <if test="searchedDTO.location != null">
            AND
            <foreach collection="searchedDTO.location" item="it" index="idx" separator="or" open="(" close=")">
                location LIKE CONCAT('%', #{it}, '%')
            </foreach>
        </if>

        <if test="searchedDTO.service != null">
            AND
            <foreach collection="searchedDTO.service" item="it" index="idx" separator="or" open="(" close=")">
                mainservice LIKE CONCAT('%', #{it}, '%')
            </foreach>
        </if>
    </select>

    <update id="updateResume">
        UPDATE MateResume
        <set>
            <if test="resumeRequestDTO.profilePictureFilename != null">profile_picture_filename = #{resumeRequestDTO.profile_picture_filename},</if>
            <if test="resumeRequestDTO.contactTimeStart != null">contact_time_start = #{resumeRequestDTO.contact_time_start},</if>
            <if test="resumeRequestDTO.contactTimeEnd != null">contact_time_end = #{resumeRequestDTO.contact_time_end},</if>
        </set>
        WHERE id = #{id}
    </update>

    <select id="isPresentResume">
        SELECT count(id) FROM materesume WHERE id = #{login_id}
    </select>

    <delete id="deleteMateResume">
        DELETE FROM materesume WHERE id = #{mate_resume_id}
    </delete>

    <select id="getProfileImageFilename">
        SELECT profile_picture_filename FROM materesume WHERE id = #{login_id}
    </select>

</mapper>