<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.suitecare.suitecare.api.recruitment.mapper.RecruitmentMapper">

    <insert id="createRecruitment" useGeneratedKeys="true" keyProperty="recruitmentRequestDTO.id">
        INSERT INTO
            recruitment (member_id, location, postcode, road_address, jibun_address, address_detail, wage, start_date, end_date, start_time, end_time, create_at, expire_at, status, patient_name, patient_gender, patient_birthday, patient_diagnosis_name, patient_height, patient_weight, patient_consciousness_state, patient_meal_care_state, patient_toilet_care_state, patient_paralysis_state, patient_behavioral_state, patient_is_bedsore, patient_need_suction, patient_need_outpatient, patient_need_night_care, patient_notice)
        SELECT
            #{login_id}, #{recruitmentRequestDTO.location}, #{recruitmentRequestDTO.postcode}, #{recruitmentRequestDTO.road_address}, #{recruitmentRequestDTO.jibun_address},
            #{recruitmentRequestDTO.address_detail}, #{recruitmentRequestDTO.wage}, #{recruitmentRequestDTO.start_date}, #{recruitmentRequestDTO.end_date},
            #{recruitmentRequestDTO.start_time}, #{recruitmentRequestDTO.end_time}, sysdate(), sysdate(), 'P',
            name, gender, birthday, diagnosis_name, height, weight, consciousness_state, meal_care_state, toilet_care_state, paralysis_state, behavioral_state, is_bedsore, need_suction, need_outpatient, need_night_care, notice
        FROM patient JOIN patientdetail ON patient.id = patientdetail.id
        WHERE patient.id = #{recruitmentRequestDTO.patient_id}
    </insert>

    <insert id="createDayOfReservation">
        INSERT INTO DayOfReservation (recruitment_id, day)
        VALUES
        <foreach collection="weekday" item="day" separator=", ">
            (#{id}, #{day})
        </foreach>
    </insert>

    <select id="getSearchedRecruitment">
        SELECT r.id, member_id, location, road_address, wage, start_date, end_date, start_time, end_time, expire_at, group_concat(day) AS day
        FROM recruitment r
        JOIN dayofreservation d ON d.recruitment_id = r.id
        WHERE
            wage between
            <foreach collection="requestDTO.wage" item="it" separator="and">
                #{it}
            </foreach>
            AND start_time &gt;= #{requestDTO.worktime[0]}
            AND end_time &lt;= #{requestDTO.worktime[1]}
            <if test="excluded_days.size() > 0">
                AND r.id IN (
                    SELECT DISTINCT recruitment_id
                    FROM dayofreservation
                    WHERE NOT EXISTS (
                        SELECT 1
                        FROM dayofreservation d2
                        WHERE d2.recruitment_id = dayofreservation.recruitment_id
                        AND
                        <foreach collection="excluded_days" item="day" separator="OR">
                            d2.day = #{day}
                        </foreach>
                    )
                )
            </if>
            <if test="requestDTO.search_input neq ''">
                AND diagnosis_name like '%#{requestDTO.search_input}%'
            </if>
            <if test="requestDTO.location != null">
                AND SUBSTRING(road_address, 4, 3) in
                <foreach collection="requestDTO.location" item="it" open="(" close=")" separator=",">
                    #{it}
                </foreach>
            </if>
            <if test="requestDTO.gender != null and requestDTO.gender.length == 1">
                AND gender =
                <foreach collection="requestDTO.gender" item="it">
                    #{it}
                </foreach>
            </if>
        GROUP BY r.id, member_id, location, road_address, wage, start_date, end_date, start_time, end_time, expire_at
        ;
    </select>
</mapper>